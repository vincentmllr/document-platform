{"ast":null,"code":"/*\r\n * Licensed to Elasticsearch B.V. under one or more contributor\r\n * license agreements. See the NOTICE file distributed with\r\n * this work for additional information regarding copyright\r\n * ownership. Elasticsearch B.V. licenses this file to you under\r\n * the Apache License, Version 2.0 (the \"License\"); you may\r\n * not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n'use strict';\n/* eslint camelcase: 0 */\n\n/* eslint no-unused-vars: 0 */\n\nconst {\n  handleError,\n  snakeCaseKeys,\n  normalizeArguments,\n  kConfigurationError\n} = require('../utils');\n\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path', 'debug', 'active', 'version', 'if_seq_no', 'if_primary_term', 'metric', 'emit_stacktraces'];\nconst snakeCase = {\n  errorTrace: 'error_trace',\n  filterPath: 'filter_path',\n  ifSeqNo: 'if_seq_no',\n  ifPrimaryTerm: 'if_primary_term',\n  emitStacktraces: 'emit_stacktraces'\n};\n\nfunction WatcherApi(transport, ConfigurationError) {\n  this.transport = transport;\n  this[kConfigurationError] = ConfigurationError;\n}\n\n_c = WatcherApi;\n\nWatcherApi.prototype.ackWatch = function watcherAckWatchApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback); // check required parameters\n\n  if (params.watch_id == null && params.watchId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: watch_id or watchId');\n    return handleError(err, callback);\n  } // check required url components\n\n\n  if ((params.action_id != null || params.actionId != null) && params.watch_id == null && params.watchId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: watch_id');\n    return handleError(err, callback);\n  }\n\n  let {\n    method,\n    body,\n    watchId,\n    watch_id,\n    actionId,\n    action_id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n\n  if ((watch_id || watchId) != null && (action_id || actionId) != null) {\n    if (method == null) method = 'PUT';\n    path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(watch_id || watchId) + '/' + '_ack' + '/' + encodeURIComponent(action_id || actionId);\n  } else {\n    if (method == null) method = 'PUT';\n    path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(watch_id || watchId) + '/' + '_ack';\n  } // build request object\n\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nWatcherApi.prototype.activateWatch = function watcherActivateWatchApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback); // check required parameters\n\n  if (params.watch_id == null && params.watchId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: watch_id or watchId');\n    return handleError(err, callback);\n  }\n\n  let {\n    method,\n    body,\n    watchId,\n    watch_id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'PUT';\n  path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(watch_id || watchId) + '/' + '_activate'; // build request object\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nWatcherApi.prototype.deactivateWatch = function watcherDeactivateWatchApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback); // check required parameters\n\n  if (params.watch_id == null && params.watchId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: watch_id or watchId');\n    return handleError(err, callback);\n  }\n\n  let {\n    method,\n    body,\n    watchId,\n    watch_id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'PUT';\n  path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(watch_id || watchId) + '/' + '_deactivate'; // build request object\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nWatcherApi.prototype.deleteWatch = function watcherDeleteWatchApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback); // check required parameters\n\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id');\n    return handleError(err, callback);\n  }\n\n  let {\n    method,\n    body,\n    id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'DELETE';\n  path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(id); // build request object\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nWatcherApi.prototype.executeWatch = function watcherExecuteWatchApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback);\n  let {\n    method,\n    body,\n    id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n\n  if (id != null) {\n    if (method == null) method = 'PUT';\n    path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(id) + '/' + '_execute';\n  } else {\n    if (method == null) method = 'PUT';\n    path = '/' + '_watcher' + '/' + 'watch' + '/' + '_execute';\n  } // build request object\n\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nWatcherApi.prototype.getWatch = function watcherGetWatchApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback); // check required parameters\n\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id');\n    return handleError(err, callback);\n  }\n\n  let {\n    method,\n    body,\n    id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'GET';\n  path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(id); // build request object\n\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nWatcherApi.prototype.putWatch = function watcherPutWatchApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback); // check required parameters\n\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id');\n    return handleError(err, callback);\n  }\n\n  let {\n    method,\n    body,\n    id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'PUT';\n  path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(id); // build request object\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nWatcherApi.prototype.queryWatches = function watcherQueryWatchesApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback);\n  let {\n    method,\n    body,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = body == null ? 'GET' : 'POST';\n  path = '/' + '_watcher' + '/' + '_query' + '/' + 'watches'; // build request object\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nWatcherApi.prototype.start = function watcherStartApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback);\n  let {\n    method,\n    body,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'POST';\n  path = '/' + '_watcher' + '/' + '_start'; // build request object\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nWatcherApi.prototype.stats = function watcherStatsApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback);\n  let {\n    method,\n    body,\n    metric,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n\n  if (metric != null) {\n    if (method == null) method = 'GET';\n    path = '/' + '_watcher' + '/' + 'stats' + '/' + encodeURIComponent(metric);\n  } else {\n    if (method == null) method = 'GET';\n    path = '/' + '_watcher' + '/' + 'stats';\n  } // build request object\n\n\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nWatcherApi.prototype.stop = function watcherStopApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback);\n  let {\n    method,\n    body,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'POST';\n  path = '/' + '_watcher' + '/' + '_stop'; // build request object\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nObject.defineProperties(WatcherApi.prototype, {\n  ack_watch: {\n    get() {\n      return this.ackWatch;\n    }\n\n  },\n  activate_watch: {\n    get() {\n      return this.activateWatch;\n    }\n\n  },\n  deactivate_watch: {\n    get() {\n      return this.deactivateWatch;\n    }\n\n  },\n  delete_watch: {\n    get() {\n      return this.deleteWatch;\n    }\n\n  },\n  execute_watch: {\n    get() {\n      return this.executeWatch;\n    }\n\n  },\n  get_watch: {\n    get() {\n      return this.getWatch;\n    }\n\n  },\n  put_watch: {\n    get() {\n      return this.putWatch;\n    }\n\n  },\n  query_watches: {\n    get() {\n      return this.queryWatches;\n    }\n\n  }\n});\nmodule.exports = WatcherApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"WatcherApi\");","map":{"version":3,"sources":["C:/Users/vince/peer/project/app_react/src/node_modules/@elastic/elasticsearch/api/api/watcher.js"],"names":["handleError","snakeCaseKeys","normalizeArguments","kConfigurationError","require","acceptedQuerystring","snakeCase","errorTrace","filterPath","ifSeqNo","ifPrimaryTerm","emitStacktraces","WatcherApi","transport","ConfigurationError","prototype","ackWatch","watcherAckWatchApi","params","options","callback","watch_id","watchId","err","action_id","actionId","method","body","querystring","path","encodeURIComponent","request","activateWatch","watcherActivateWatchApi","deactivateWatch","watcherDeactivateWatchApi","deleteWatch","watcherDeleteWatchApi","id","executeWatch","watcherExecuteWatchApi","getWatch","watcherGetWatchApi","putWatch","watcherPutWatchApi","queryWatches","watcherQueryWatchesApi","start","watcherStartApi","stats","watcherStatsApi","metric","stop","watcherStopApi","Object","defineProperties","ack_watch","get","activate_watch","deactivate_watch","delete_watch","execute_watch","get_watch","put_watch","query_watches","module","exports"],"mappings":"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","sourcesContent":["/*\r\n * Licensed to Elasticsearch B.V. under one or more contributor\r\n * license agreements. See the NOTICE file distributed with\r\n * this work for additional information regarding copyright\r\n * ownership. Elasticsearch B.V. licenses this file to you under\r\n * the Apache License, Version 2.0 (the \"License\"); you may\r\n * not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\n'use strict'\r\n\r\n/* eslint camelcase: 0 */\r\n/* eslint no-unused-vars: 0 */\r\n\r\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\r\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path', 'debug', 'active', 'version', 'if_seq_no', 'if_primary_term', 'metric', 'emit_stacktraces']\r\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path', ifSeqNo: 'if_seq_no', ifPrimaryTerm: 'if_primary_term', emitStacktraces: 'emit_stacktraces' }\r\n\r\nfunction WatcherApi (transport, ConfigurationError) {\r\n  this.transport = transport\r\n  this[kConfigurationError] = ConfigurationError\r\n}\r\n\r\nWatcherApi.prototype.ackWatch = function watcherAckWatchApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  // check required parameters\r\n  if (params.watch_id == null && params.watchId == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: watch_id or watchId')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  // check required url components\r\n  if ((params.action_id != null || params.actionId != null) && ((params.watch_id == null && params.watchId == null))) {\r\n    const err = new this[kConfigurationError]('Missing required parameter of the url: watch_id')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  let { method, body, watchId, watch_id, actionId, action_id, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if ((watch_id || watchId) != null && (action_id || actionId) != null) {\r\n    if (method == null) method = 'PUT'\r\n    path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(watch_id || watchId) + '/' + '_ack' + '/' + encodeURIComponent(action_id || actionId)\r\n  } else {\r\n    if (method == null) method = 'PUT'\r\n    path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(watch_id || watchId) + '/' + '_ack'\r\n  }\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nWatcherApi.prototype.activateWatch = function watcherActivateWatchApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  // check required parameters\r\n  if (params.watch_id == null && params.watchId == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: watch_id or watchId')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  let { method, body, watchId, watch_id, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if (method == null) method = 'PUT'\r\n  path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(watch_id || watchId) + '/' + '_activate'\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nWatcherApi.prototype.deactivateWatch = function watcherDeactivateWatchApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  // check required parameters\r\n  if (params.watch_id == null && params.watchId == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: watch_id or watchId')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  let { method, body, watchId, watch_id, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if (method == null) method = 'PUT'\r\n  path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(watch_id || watchId) + '/' + '_deactivate'\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nWatcherApi.prototype.deleteWatch = function watcherDeleteWatchApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  // check required parameters\r\n  if (params.id == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: id')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  let { method, body, id, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if (method == null) method = 'DELETE'\r\n  path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(id)\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nWatcherApi.prototype.executeWatch = function watcherExecuteWatchApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  let { method, body, id, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if ((id) != null) {\r\n    if (method == null) method = 'PUT'\r\n    path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(id) + '/' + '_execute'\r\n  } else {\r\n    if (method == null) method = 'PUT'\r\n    path = '/' + '_watcher' + '/' + 'watch' + '/' + '_execute'\r\n  }\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nWatcherApi.prototype.getWatch = function watcherGetWatchApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  // check required parameters\r\n  if (params.id == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: id')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  let { method, body, id, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if (method == null) method = 'GET'\r\n  path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(id)\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: null,\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nWatcherApi.prototype.putWatch = function watcherPutWatchApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  // check required parameters\r\n  if (params.id == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: id')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  let { method, body, id, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if (method == null) method = 'PUT'\r\n  path = '/' + '_watcher' + '/' + 'watch' + '/' + encodeURIComponent(id)\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nWatcherApi.prototype.queryWatches = function watcherQueryWatchesApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  let { method, body, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if (method == null) method = body == null ? 'GET' : 'POST'\r\n  path = '/' + '_watcher' + '/' + '_query' + '/' + 'watches'\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nWatcherApi.prototype.start = function watcherStartApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  let { method, body, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if (method == null) method = 'POST'\r\n  path = '/' + '_watcher' + '/' + '_start'\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nWatcherApi.prototype.stats = function watcherStatsApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  let { method, body, metric, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if ((metric) != null) {\r\n    if (method == null) method = 'GET'\r\n    path = '/' + '_watcher' + '/' + 'stats' + '/' + encodeURIComponent(metric)\r\n  } else {\r\n    if (method == null) method = 'GET'\r\n    path = '/' + '_watcher' + '/' + 'stats'\r\n  }\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: null,\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nWatcherApi.prototype.stop = function watcherStopApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  let { method, body, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if (method == null) method = 'POST'\r\n  path = '/' + '_watcher' + '/' + '_stop'\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nObject.defineProperties(WatcherApi.prototype, {\r\n  ack_watch: { get () { return this.ackWatch } },\r\n  activate_watch: { get () { return this.activateWatch } },\r\n  deactivate_watch: { get () { return this.deactivateWatch } },\r\n  delete_watch: { get () { return this.deleteWatch } },\r\n  execute_watch: { get () { return this.executeWatch } },\r\n  get_watch: { get () { return this.getWatch } },\r\n  put_watch: { get () { return this.putWatch } },\r\n  query_watches: { get () { return this.queryWatches } }\r\n})\r\n\r\nmodule.exports = WatcherApi\r\n"]},"metadata":{},"sourceType":"module"}