{"ast":null,"code":"/*\r\n * Licensed to Elasticsearch B.V. under one or more contributor\r\n * license agreements. See the NOTICE file distributed with\r\n * this work for additional information regarding copyright\r\n * ownership. Elasticsearch B.V. licenses this file to you under\r\n * the Apache License, Version 2.0 (the \"License\"); you may\r\n * not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n'use strict';\n\nconst {\n  EventEmitter\n} = require('events');\n\nconst {\n  URL\n} = require('url');\n\nconst debug = require('debug')('elasticsearch');\n\nconst Transport = require('./lib/Transport');\n\nconst Connection = require('./lib/Connection');\n\nconst {\n  ConnectionPool,\n  CloudConnectionPool\n} = require('./lib/pool');\n\nconst Helpers = require('./lib/Helpers');\n\nconst Serializer = require('./lib/Serializer');\n\nconst errors = require('./lib/errors');\n\nconst {\n  ConfigurationError\n} = errors;\nconst {\n  prepareHeaders\n} = Connection.internals;\n\nlet clientVersion = require('./package.json').version;\n/* istanbul ignore next */\n\n\nif (clientVersion.includes('-')) {\n  // clean prerelease\n  clientVersion = clientVersion.slice(0, clientVersion.indexOf('-')) + 'p';\n}\n\nconst nodeVersion = process.versions.node;\nconst kInitialOptions = Symbol('elasticsearchjs-initial-options');\nconst kChild = Symbol('elasticsearchjs-child');\nconst kExtensions = Symbol('elasticsearchjs-extensions');\nconst kEventEmitter = Symbol('elasticsearchjs-event-emitter');\n\nconst ESAPI = require('./api');\n\nclass Client extends ESAPI {\n  constructor(opts = {}) {\n    super({\n      ConfigurationError\n    });\n\n    if (opts.cloud && opts[kChild] === undefined) {\n      const {\n        id,\n        username,\n        password\n      } = opts.cloud; // the cloud id is `cluster-name:base64encodedurl`\n      // the url is a string divided by two '$', the first is the cloud url\n      // the second the elasticsearch instance, the third the kibana instance\n\n      const cloudUrls = Buffer.from(id.split(':')[1], 'base64').toString().split('$'); // TODO: remove username and password here in 8\n\n      if (username && password) {\n        opts.auth = Object.assign({}, opts.auth, {\n          username,\n          password\n        });\n      }\n\n      opts.node = `https://${cloudUrls[1]}.${cloudUrls[0]}`; // Cloud has better performances with compression enabled\n      // see https://github.com/elastic/elasticsearch-py/pull/704.\n      // So unless the user specifies otherwise, we enable compression.\n\n      if (opts.compression == null) opts.compression = 'gzip';\n      if (opts.suggestCompression == null) opts.suggestCompression = true;\n\n      if (opts.ssl == null || opts.ssl && opts.ssl.secureProtocol == null) {\n        opts.ssl = opts.ssl || {};\n        opts.ssl.secureProtocol = 'TLSv1_2_method';\n      }\n    }\n\n    if (!opts.node && !opts.nodes) {\n      throw new ConfigurationError('Missing node(s) option');\n    }\n\n    if (opts[kChild] === undefined) {\n      const checkAuth = getAuth(opts.node || opts.nodes);\n\n      if (checkAuth && checkAuth.username && checkAuth.password) {\n        opts.auth = Object.assign({}, opts.auth, {\n          username: checkAuth.username,\n          password: checkAuth.password\n        });\n      }\n    }\n\n    const options = opts[kChild] !== undefined ? opts[kChild].initialOptions : Object.assign({}, {\n      Connection,\n      Transport,\n      Serializer,\n      ConnectionPool: opts.cloud ? CloudConnectionPool : ConnectionPool,\n      maxRetries: 3,\n      requestTimeout: 30000,\n      pingTimeout: 3000,\n      sniffInterval: false,\n      sniffOnStart: false,\n      sniffEndpoint: '_nodes/_all/http',\n      sniffOnConnectionFault: false,\n      resurrectStrategy: 'ping',\n      suggestCompression: false,\n      compression: false,\n      ssl: null,\n      agent: null,\n      headers: {},\n      nodeFilter: null,\n      nodeSelector: 'round-robin',\n      generateRequestId: null,\n      name: 'elasticsearch-js',\n      auth: null,\n      opaqueIdPrefix: null,\n      context: null,\n      proxy: null,\n      enableMetaHeader: true,\n      disablePrototypePoisoningProtection: false\n    }, opts);\n    this[kInitialOptions] = options;\n    this[kExtensions] = [];\n    this.name = options.name;\n\n    if (options.enableMetaHeader) {\n      options.headers['x-elastic-client-meta'] = `es=${clientVersion},js=${nodeVersion},t=${clientVersion},hc=${nodeVersion}`;\n    }\n\n    if (opts[kChild] !== undefined) {\n      this.serializer = options[kChild].serializer;\n      this.connectionPool = options[kChild].connectionPool;\n      this[kEventEmitter] = options[kChild].eventEmitter;\n    } else {\n      this[kEventEmitter] = new EventEmitter();\n      this.serializer = new options.Serializer({\n        disablePrototypePoisoningProtection: options.disablePrototypePoisoningProtection\n      });\n      this.connectionPool = new options.ConnectionPool({\n        pingTimeout: options.pingTimeout,\n        resurrectStrategy: options.resurrectStrategy,\n        ssl: options.ssl,\n        agent: options.agent,\n        proxy: options.proxy,\n        Connection: options.Connection,\n        auth: options.auth,\n        emit: this[kEventEmitter].emit.bind(this[kEventEmitter]),\n        sniffEnabled: options.sniffInterval !== false || options.sniffOnStart !== false || options.sniffOnConnectionFault !== false\n      }); // Add the connections before initialize the Transport\n\n      this.connectionPool.addConnection(options.node || options.nodes);\n    }\n\n    this.transport = new options.Transport({\n      emit: this[kEventEmitter].emit.bind(this[kEventEmitter]),\n      connectionPool: this.connectionPool,\n      serializer: this.serializer,\n      maxRetries: options.maxRetries,\n      requestTimeout: options.requestTimeout,\n      sniffInterval: options.sniffInterval,\n      sniffOnStart: options.sniffOnStart,\n      sniffOnConnectionFault: options.sniffOnConnectionFault,\n      sniffEndpoint: options.sniffEndpoint,\n      suggestCompression: options.suggestCompression,\n      compression: options.compression,\n      headers: options.headers,\n      nodeFilter: options.nodeFilter,\n      nodeSelector: options.nodeSelector,\n      generateRequestId: options.generateRequestId,\n      name: options.name,\n      opaqueIdPrefix: options.opaqueIdPrefix,\n      context: options.context\n    });\n    this.helpers = new Helpers({\n      client: this,\n      maxRetries: options.maxRetries,\n      metaHeader: options.enableMetaHeader ? `es=${clientVersion},js=${nodeVersion},t=${clientVersion},hc=${nodeVersion}` : null\n    });\n  }\n\n  get emit() {\n    return this[kEventEmitter].emit.bind(this[kEventEmitter]);\n  }\n\n  get on() {\n    return this[kEventEmitter].on.bind(this[kEventEmitter]);\n  }\n\n  get once() {\n    return this[kEventEmitter].once.bind(this[kEventEmitter]);\n  }\n\n  get off() {\n    return this[kEventEmitter].off.bind(this[kEventEmitter]);\n  }\n\n  extend(name, opts, fn) {\n    if (typeof opts === 'function') {\n      fn = opts;\n      opts = {};\n    }\n\n    let [namespace, method] = name.split('.');\n\n    if (method == null) {\n      method = namespace;\n      namespace = null;\n    }\n\n    if (namespace != null) {\n      if (this[namespace] != null && this[namespace][method] != null && opts.force !== true) {\n        throw new Error(`The method \"${method}\" already exists on namespace \"${namespace}\"`);\n      }\n\n      if (this[namespace] == null) this[namespace] = {};\n      this[namespace][method] = fn({\n        makeRequest: this.transport.request.bind(this.transport),\n        result: {\n          body: null,\n          statusCode: null,\n          headers: null,\n          warnings: null\n        },\n        ConfigurationError\n      });\n    } else {\n      if (this[method] != null && opts.force !== true) {\n        throw new Error(`The method \"${method}\" already exists`);\n      }\n\n      this[method] = fn({\n        makeRequest: this.transport.request.bind(this.transport),\n        result: {\n          body: null,\n          statusCode: null,\n          headers: null,\n          warnings: null\n        },\n        ConfigurationError\n      });\n    }\n\n    this[kExtensions].push({\n      name,\n      opts,\n      fn\n    });\n  }\n\n  child(opts) {\n    // Merge the new options with the initial ones\n    const options = Object.assign({}, this[kInitialOptions], opts); // Pass to the child client the parent instances that cannot be overriden\n\n    options[kChild] = {\n      connectionPool: this.connectionPool,\n      serializer: this.serializer,\n      eventEmitter: this[kEventEmitter],\n      initialOptions: options\n    };\n    /* istanbul ignore else */\n\n    if (options.auth !== undefined) {\n      options.headers = prepareHeaders(options.headers, options.auth);\n    }\n\n    const client = new Client(options); // Add parent extensions\n\n    if (this[kExtensions].length > 0) {\n      this[kExtensions].forEach(({\n        name,\n        opts,\n        fn\n      }) => {\n        client.extend(name, opts, fn);\n      });\n    }\n\n    return client;\n  }\n\n  close(callback) {\n    if (callback == null) {\n      return new Promise((resolve, reject) => {\n        this.close(resolve);\n      });\n    }\n\n    debug('Closing the client');\n    this.connectionPool.empty(callback);\n  }\n\n}\n\nfunction getAuth(node) {\n  if (Array.isArray(node)) {\n    for (const url of node) {\n      const auth = getUsernameAndPassword(url);\n\n      if (auth.username !== '' && auth.password !== '') {\n        return auth;\n      }\n    }\n\n    return null;\n  }\n\n  const auth = getUsernameAndPassword(node);\n\n  if (auth.username !== '' && auth.password !== '') {\n    return auth;\n  }\n\n  return null;\n\n  function getUsernameAndPassword(node) {\n    /* istanbul ignore else */\n    if (typeof node === 'string') {\n      const {\n        username,\n        password\n      } = new URL(node);\n      return {\n        username: decodeURIComponent(username),\n        password: decodeURIComponent(password)\n      };\n    } else if (node.url instanceof URL) {\n      return {\n        username: decodeURIComponent(node.url.username),\n        password: decodeURIComponent(node.url.password)\n      };\n    }\n  }\n}\n\nconst events = {\n  RESPONSE: 'response',\n  REQUEST: 'request',\n  SNIFF: 'sniff',\n  RESURRECT: 'resurrect',\n  SERIALIZATION: 'serialization',\n  DESERIALIZATION: 'deserialization'\n};\nmodule.exports = {\n  Client,\n  Transport,\n  ConnectionPool,\n  Connection,\n  Serializer,\n  events,\n  errors\n};","map":{"version":3,"sources":["C:/Users/vince/peer/project/app_react/src/node_modules/@elastic/elasticsearch/index.js"],"names":["EventEmitter","require","URL","debug","Transport","Connection","ConnectionPool","CloudConnectionPool","Helpers","Serializer","errors","ConfigurationError","prepareHeaders","internals","clientVersion","version","includes","slice","indexOf","nodeVersion","process","versions","node","kInitialOptions","Symbol","kChild","kExtensions","kEventEmitter","ESAPI","Client","constructor","opts","cloud","undefined","id","username","password","cloudUrls","Buffer","from","split","toString","auth","Object","assign","compression","suggestCompression","ssl","secureProtocol","nodes","checkAuth","getAuth","options","initialOptions","maxRetries","requestTimeout","pingTimeout","sniffInterval","sniffOnStart","sniffEndpoint","sniffOnConnectionFault","resurrectStrategy","agent","headers","nodeFilter","nodeSelector","generateRequestId","name","opaqueIdPrefix","context","proxy","enableMetaHeader","disablePrototypePoisoningProtection","serializer","connectionPool","eventEmitter","emit","bind","sniffEnabled","addConnection","transport","helpers","client","metaHeader","on","once","off","extend","fn","namespace","method","force","Error","makeRequest","request","result","body","statusCode","warnings","push","child","length","forEach","close","callback","Promise","resolve","reject","empty","Array","isArray","url","getUsernameAndPassword","decodeURIComponent","events","RESPONSE","REQUEST","SNIFF","RESURRECT","SERIALIZATION","DESERIALIZATION","module","exports"],"mappings":"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","sourcesContent":["/*\r\n * Licensed to Elasticsearch B.V. under one or more contributor\r\n * license agreements. See the NOTICE file distributed with\r\n * this work for additional information regarding copyright\r\n * ownership. Elasticsearch B.V. licenses this file to you under\r\n * the Apache License, Version 2.0 (the \"License\"); you may\r\n * not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\n'use strict'\r\n\r\nconst { EventEmitter } = require('events')\r\nconst { URL } = require('url')\r\nconst debug = require('debug')('elasticsearch')\r\nconst Transport = require('./lib/Transport')\r\nconst Connection = require('./lib/Connection')\r\nconst { ConnectionPool, CloudConnectionPool } = require('./lib/pool')\r\nconst Helpers = require('./lib/Helpers')\r\nconst Serializer = require('./lib/Serializer')\r\nconst errors = require('./lib/errors')\r\nconst { ConfigurationError } = errors\r\nconst { prepareHeaders } = Connection.internals\r\nlet clientVersion = require('./package.json').version\r\n/* istanbul ignore next */\r\nif (clientVersion.includes('-')) {\r\n  // clean prerelease\r\n  clientVersion = clientVersion.slice(0, clientVersion.indexOf('-')) + 'p'\r\n}\r\nconst nodeVersion = process.versions.node\r\n\r\nconst kInitialOptions = Symbol('elasticsearchjs-initial-options')\r\nconst kChild = Symbol('elasticsearchjs-child')\r\nconst kExtensions = Symbol('elasticsearchjs-extensions')\r\nconst kEventEmitter = Symbol('elasticsearchjs-event-emitter')\r\n\r\nconst ESAPI = require('./api')\r\n\r\nclass Client extends ESAPI {\r\n  constructor (opts = {}) {\r\n    super({ ConfigurationError })\r\n    if (opts.cloud && opts[kChild] === undefined) {\r\n      const { id, username, password } = opts.cloud\r\n      // the cloud id is `cluster-name:base64encodedurl`\r\n      // the url is a string divided by two '$', the first is the cloud url\r\n      // the second the elasticsearch instance, the third the kibana instance\r\n      const cloudUrls = Buffer.from(id.split(':')[1], 'base64').toString().split('$')\r\n\r\n      // TODO: remove username and password here in 8\r\n      if (username && password) {\r\n        opts.auth = Object.assign({}, opts.auth, { username, password })\r\n      }\r\n      opts.node = `https://${cloudUrls[1]}.${cloudUrls[0]}`\r\n\r\n      // Cloud has better performances with compression enabled\r\n      // see https://github.com/elastic/elasticsearch-py/pull/704.\r\n      // So unless the user specifies otherwise, we enable compression.\r\n      if (opts.compression == null) opts.compression = 'gzip'\r\n      if (opts.suggestCompression == null) opts.suggestCompression = true\r\n      if (opts.ssl == null ||\r\n         (opts.ssl && opts.ssl.secureProtocol == null)) {\r\n        opts.ssl = opts.ssl || {}\r\n        opts.ssl.secureProtocol = 'TLSv1_2_method'\r\n      }\r\n    }\r\n\r\n    if (!opts.node && !opts.nodes) {\r\n      throw new ConfigurationError('Missing node(s) option')\r\n    }\r\n\r\n    if (opts[kChild] === undefined) {\r\n      const checkAuth = getAuth(opts.node || opts.nodes)\r\n      if (checkAuth && checkAuth.username && checkAuth.password) {\r\n        opts.auth = Object.assign({}, opts.auth, { username: checkAuth.username, password: checkAuth.password })\r\n      }\r\n    }\r\n\r\n    const options = opts[kChild] !== undefined\r\n      ? opts[kChild].initialOptions\r\n      : Object.assign({}, {\r\n        Connection,\r\n        Transport,\r\n        Serializer,\r\n        ConnectionPool: opts.cloud ? CloudConnectionPool : ConnectionPool,\r\n        maxRetries: 3,\r\n        requestTimeout: 30000,\r\n        pingTimeout: 3000,\r\n        sniffInterval: false,\r\n        sniffOnStart: false,\r\n        sniffEndpoint: '_nodes/_all/http',\r\n        sniffOnConnectionFault: false,\r\n        resurrectStrategy: 'ping',\r\n        suggestCompression: false,\r\n        compression: false,\r\n        ssl: null,\r\n        agent: null,\r\n        headers: {},\r\n        nodeFilter: null,\r\n        nodeSelector: 'round-robin',\r\n        generateRequestId: null,\r\n        name: 'elasticsearch-js',\r\n        auth: null,\r\n        opaqueIdPrefix: null,\r\n        context: null,\r\n        proxy: null,\r\n        enableMetaHeader: true,\r\n        disablePrototypePoisoningProtection: false\r\n      }, opts)\r\n\r\n    this[kInitialOptions] = options\r\n    this[kExtensions] = []\r\n    this.name = options.name\r\n\r\n    if (options.enableMetaHeader) {\r\n      options.headers['x-elastic-client-meta'] = `es=${clientVersion},js=${nodeVersion},t=${clientVersion},hc=${nodeVersion}`\r\n    }\r\n\r\n    if (opts[kChild] !== undefined) {\r\n      this.serializer = options[kChild].serializer\r\n      this.connectionPool = options[kChild].connectionPool\r\n      this[kEventEmitter] = options[kChild].eventEmitter\r\n    } else {\r\n      this[kEventEmitter] = new EventEmitter()\r\n      this.serializer = new options.Serializer({\r\n        disablePrototypePoisoningProtection: options.disablePrototypePoisoningProtection\r\n      })\r\n      this.connectionPool = new options.ConnectionPool({\r\n        pingTimeout: options.pingTimeout,\r\n        resurrectStrategy: options.resurrectStrategy,\r\n        ssl: options.ssl,\r\n        agent: options.agent,\r\n        proxy: options.proxy,\r\n        Connection: options.Connection,\r\n        auth: options.auth,\r\n        emit: this[kEventEmitter].emit.bind(this[kEventEmitter]),\r\n        sniffEnabled: options.sniffInterval !== false ||\r\n                      options.sniffOnStart !== false ||\r\n                      options.sniffOnConnectionFault !== false\r\n      })\r\n      // Add the connections before initialize the Transport\r\n      this.connectionPool.addConnection(options.node || options.nodes)\r\n    }\r\n\r\n    this.transport = new options.Transport({\r\n      emit: this[kEventEmitter].emit.bind(this[kEventEmitter]),\r\n      connectionPool: this.connectionPool,\r\n      serializer: this.serializer,\r\n      maxRetries: options.maxRetries,\r\n      requestTimeout: options.requestTimeout,\r\n      sniffInterval: options.sniffInterval,\r\n      sniffOnStart: options.sniffOnStart,\r\n      sniffOnConnectionFault: options.sniffOnConnectionFault,\r\n      sniffEndpoint: options.sniffEndpoint,\r\n      suggestCompression: options.suggestCompression,\r\n      compression: options.compression,\r\n      headers: options.headers,\r\n      nodeFilter: options.nodeFilter,\r\n      nodeSelector: options.nodeSelector,\r\n      generateRequestId: options.generateRequestId,\r\n      name: options.name,\r\n      opaqueIdPrefix: options.opaqueIdPrefix,\r\n      context: options.context\r\n    })\r\n\r\n    this.helpers = new Helpers({\r\n      client: this,\r\n      maxRetries: options.maxRetries,\r\n      metaHeader: options.enableMetaHeader\r\n        ? `es=${clientVersion},js=${nodeVersion},t=${clientVersion},hc=${nodeVersion}`\r\n        : null\r\n    })\r\n  }\r\n\r\n  get emit () {\r\n    return this[kEventEmitter].emit.bind(this[kEventEmitter])\r\n  }\r\n\r\n  get on () {\r\n    return this[kEventEmitter].on.bind(this[kEventEmitter])\r\n  }\r\n\r\n  get once () {\r\n    return this[kEventEmitter].once.bind(this[kEventEmitter])\r\n  }\r\n\r\n  get off () {\r\n    return this[kEventEmitter].off.bind(this[kEventEmitter])\r\n  }\r\n\r\n  extend (name, opts, fn) {\r\n    if (typeof opts === 'function') {\r\n      fn = opts\r\n      opts = {}\r\n    }\r\n\r\n    let [namespace, method] = name.split('.')\r\n    if (method == null) {\r\n      method = namespace\r\n      namespace = null\r\n    }\r\n\r\n    if (namespace != null) {\r\n      if (this[namespace] != null && this[namespace][method] != null && opts.force !== true) {\r\n        throw new Error(`The method \"${method}\" already exists on namespace \"${namespace}\"`)\r\n      }\r\n\r\n      if (this[namespace] == null) this[namespace] = {}\r\n      this[namespace][method] = fn({\r\n        makeRequest: this.transport.request.bind(this.transport),\r\n        result: { body: null, statusCode: null, headers: null, warnings: null },\r\n        ConfigurationError\r\n      })\r\n    } else {\r\n      if (this[method] != null && opts.force !== true) {\r\n        throw new Error(`The method \"${method}\" already exists`)\r\n      }\r\n\r\n      this[method] = fn({\r\n        makeRequest: this.transport.request.bind(this.transport),\r\n        result: { body: null, statusCode: null, headers: null, warnings: null },\r\n        ConfigurationError\r\n      })\r\n    }\r\n\r\n    this[kExtensions].push({ name, opts, fn })\r\n  }\r\n\r\n  child (opts) {\r\n    // Merge the new options with the initial ones\r\n    const options = Object.assign({}, this[kInitialOptions], opts)\r\n    // Pass to the child client the parent instances that cannot be overriden\r\n    options[kChild] = {\r\n      connectionPool: this.connectionPool,\r\n      serializer: this.serializer,\r\n      eventEmitter: this[kEventEmitter],\r\n      initialOptions: options\r\n    }\r\n\r\n    /* istanbul ignore else */\r\n    if (options.auth !== undefined) {\r\n      options.headers = prepareHeaders(options.headers, options.auth)\r\n    }\r\n\r\n    const client = new Client(options)\r\n    // Add parent extensions\r\n    if (this[kExtensions].length > 0) {\r\n      this[kExtensions].forEach(({ name, opts, fn }) => {\r\n        client.extend(name, opts, fn)\r\n      })\r\n    }\r\n    return client\r\n  }\r\n\r\n  close (callback) {\r\n    if (callback == null) {\r\n      return new Promise((resolve, reject) => {\r\n        this.close(resolve)\r\n      })\r\n    }\r\n    debug('Closing the client')\r\n    this.connectionPool.empty(callback)\r\n  }\r\n}\r\n\r\nfunction getAuth (node) {\r\n  if (Array.isArray(node)) {\r\n    for (const url of node) {\r\n      const auth = getUsernameAndPassword(url)\r\n      if (auth.username !== '' && auth.password !== '') {\r\n        return auth\r\n      }\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  const auth = getUsernameAndPassword(node)\r\n  if (auth.username !== '' && auth.password !== '') {\r\n    return auth\r\n  }\r\n\r\n  return null\r\n\r\n  function getUsernameAndPassword (node) {\r\n    /* istanbul ignore else */\r\n    if (typeof node === 'string') {\r\n      const { username, password } = new URL(node)\r\n      return {\r\n        username: decodeURIComponent(username),\r\n        password: decodeURIComponent(password)\r\n      }\r\n    } else if (node.url instanceof URL) {\r\n      return {\r\n        username: decodeURIComponent(node.url.username),\r\n        password: decodeURIComponent(node.url.password)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst events = {\r\n  RESPONSE: 'response',\r\n  REQUEST: 'request',\r\n  SNIFF: 'sniff',\r\n  RESURRECT: 'resurrect',\r\n  SERIALIZATION: 'serialization',\r\n  DESERIALIZATION: 'deserialization'\r\n}\r\n\r\nmodule.exports = {\r\n  Client,\r\n  Transport,\r\n  ConnectionPool,\r\n  Connection,\r\n  Serializer,\r\n  events,\r\n  errors\r\n}\r\n"]},"metadata":{},"sourceType":"module"}