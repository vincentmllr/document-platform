{"ast":null,"code":"/*\r\n * Licensed to Elasticsearch B.V. under one or more contributor\r\n * license agreements. See the NOTICE file distributed with\r\n * this work for additional information regarding copyright\r\n * ownership. Elasticsearch B.V. licenses this file to you under\r\n * the Apache License, Version 2.0 (the \"License\"); you may\r\n * not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n'use strict';\n/* eslint camelcase: 0 */\n\n/* eslint no-unused-vars: 0 */\n\nconst {\n  handleError,\n  snakeCaseKeys,\n  normalizeArguments,\n  kConfigurationError\n} = require('../utils');\n\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path'];\nconst snakeCase = {\n  errorTrace: 'error_trace',\n  filterPath: 'filter_path'\n};\n\nfunction ShutdownApi(transport, ConfigurationError) {\n  this.transport = transport;\n  this[kConfigurationError] = ConfigurationError;\n}\n\n_c = ShutdownApi;\n\nShutdownApi.prototype.deleteNode = function shutdownDeleteNodeApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback); // check required parameters\n\n  if (params.node_id == null && params.nodeId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: node_id or nodeId');\n    return handleError(err, callback);\n  }\n\n  let {\n    method,\n    body,\n    nodeId,\n    node_id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'DELETE';\n  path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'shutdown'; // build request object\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nShutdownApi.prototype.getNode = function shutdownGetNodeApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback);\n  let {\n    method,\n    body,\n    nodeId,\n    node_id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n\n  if ((node_id || nodeId) != null) {\n    if (method == null) method = 'GET';\n    path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'shutdown';\n  } else {\n    if (method == null) method = 'GET';\n    path = '/' + '_nodes' + '/' + 'shutdown';\n  } // build request object\n\n\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nShutdownApi.prototype.putNode = function shutdownPutNodeApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback); // check required parameters\n\n  if (params.node_id == null && params.nodeId == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: node_id or nodeId');\n    return handleError(err, callback);\n  }\n\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body');\n    return handleError(err, callback);\n  }\n\n  let {\n    method,\n    body,\n    nodeId,\n    node_id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'PUT';\n  path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'shutdown'; // build request object\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nObject.defineProperties(ShutdownApi.prototype, {\n  delete_node: {\n    get() {\n      return this.deleteNode;\n    }\n\n  },\n  get_node: {\n    get() {\n      return this.getNode;\n    }\n\n  },\n  put_node: {\n    get() {\n      return this.putNode;\n    }\n\n  }\n});\nmodule.exports = ShutdownApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShutdownApi\");","map":{"version":3,"sources":["C:/Users/vince/peer/project/app_react/src/node_modules/@elastic/elasticsearch/api/api/shutdown.js"],"names":["handleError","snakeCaseKeys","normalizeArguments","kConfigurationError","require","acceptedQuerystring","snakeCase","errorTrace","filterPath","ShutdownApi","transport","ConfigurationError","prototype","deleteNode","shutdownDeleteNodeApi","params","options","callback","node_id","nodeId","err","method","body","querystring","path","encodeURIComponent","request","getNode","shutdownGetNodeApi","putNode","shutdownPutNodeApi","Object","defineProperties","delete_node","get","get_node","put_node","module","exports"],"mappings":"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","sourcesContent":["/*\r\n * Licensed to Elasticsearch B.V. under one or more contributor\r\n * license agreements. See the NOTICE file distributed with\r\n * this work for additional information regarding copyright\r\n * ownership. Elasticsearch B.V. licenses this file to you under\r\n * the Apache License, Version 2.0 (the \"License\"); you may\r\n * not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\n'use strict'\r\n\r\n/* eslint camelcase: 0 */\r\n/* eslint no-unused-vars: 0 */\r\n\r\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\r\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path']\r\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path' }\r\n\r\nfunction ShutdownApi (transport, ConfigurationError) {\r\n  this.transport = transport\r\n  this[kConfigurationError] = ConfigurationError\r\n}\r\n\r\nShutdownApi.prototype.deleteNode = function shutdownDeleteNodeApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  // check required parameters\r\n  if (params.node_id == null && params.nodeId == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: node_id or nodeId')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  let { method, body, nodeId, node_id, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if (method == null) method = 'DELETE'\r\n  path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'shutdown'\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nShutdownApi.prototype.getNode = function shutdownGetNodeApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  let { method, body, nodeId, node_id, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if ((node_id || nodeId) != null) {\r\n    if (method == null) method = 'GET'\r\n    path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'shutdown'\r\n  } else {\r\n    if (method == null) method = 'GET'\r\n    path = '/' + '_nodes' + '/' + 'shutdown'\r\n  }\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: null,\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nShutdownApi.prototype.putNode = function shutdownPutNodeApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  // check required parameters\r\n  if (params.node_id == null && params.nodeId == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: node_id or nodeId')\r\n    return handleError(err, callback)\r\n  }\r\n  if (params.body == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: body')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  let { method, body, nodeId, node_id, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if (method == null) method = 'PUT'\r\n  path = '/' + '_nodes' + '/' + encodeURIComponent(node_id || nodeId) + '/' + 'shutdown'\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nObject.defineProperties(ShutdownApi.prototype, {\r\n  delete_node: { get () { return this.deleteNode } },\r\n  get_node: { get () { return this.getNode } },\r\n  put_node: { get () { return this.putNode } }\r\n})\r\n\r\nmodule.exports = ShutdownApi\r\n"]},"metadata":{},"sourceType":"module"}