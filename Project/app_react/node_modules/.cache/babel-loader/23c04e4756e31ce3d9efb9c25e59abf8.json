{"ast":null,"code":"/*\r\n * Licensed to Elasticsearch B.V. under one or more contributor\r\n * license agreements. See the NOTICE file distributed with\r\n * this work for additional information regarding copyright\r\n * ownership. Elasticsearch B.V. licenses this file to you under\r\n * the Apache License, Version 2.0 (the \"License\"); you may\r\n * not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n'use strict';\n/* eslint camelcase: 0 */\n\n/* eslint no-unused-vars: 0 */\n\nconst {\n  handleError,\n  snakeCaseKeys,\n  normalizeArguments,\n  kConfigurationError\n} = require('../utils');\n\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path', 'typed_keys', 'rest_total_hits_as_int', 'wait_for_completion', 'timeout'];\nconst snakeCase = {\n  errorTrace: 'error_trace',\n  filterPath: 'filter_path',\n  typedKeys: 'typed_keys',\n  restTotalHitsAsInt: 'rest_total_hits_as_int',\n  waitForCompletion: 'wait_for_completion'\n};\n\nfunction RollupApi(transport, ConfigurationError) {\n  this.transport = transport;\n  this[kConfigurationError] = ConfigurationError;\n}\n\n_c = RollupApi;\n\nRollupApi.prototype.deleteJob = function rollupDeleteJobApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback); // check required parameters\n\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id');\n    return handleError(err, callback);\n  }\n\n  let {\n    method,\n    body,\n    id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'DELETE';\n  path = '/' + '_rollup' + '/' + 'job' + '/' + encodeURIComponent(id); // build request object\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nRollupApi.prototype.getJobs = function rollupGetJobsApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback);\n  let {\n    method,\n    body,\n    id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n\n  if (id != null) {\n    if (method == null) method = 'GET';\n    path = '/' + '_rollup' + '/' + 'job' + '/' + encodeURIComponent(id);\n  } else {\n    if (method == null) method = 'GET';\n    path = '/' + '_rollup' + '/' + 'job';\n  } // build request object\n\n\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nRollupApi.prototype.getRollupCaps = function rollupGetRollupCapsApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback);\n  let {\n    method,\n    body,\n    id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n\n  if (id != null) {\n    if (method == null) method = 'GET';\n    path = '/' + '_rollup' + '/' + 'data' + '/' + encodeURIComponent(id);\n  } else {\n    if (method == null) method = 'GET';\n    path = '/' + '_rollup' + '/' + 'data';\n  } // build request object\n\n\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nRollupApi.prototype.getRollupIndexCaps = function rollupGetRollupIndexCapsApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback); // check required parameters\n\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index');\n    return handleError(err, callback);\n  }\n\n  let {\n    method,\n    body,\n    index,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'GET';\n  path = '/' + encodeURIComponent(index) + '/' + '_rollup' + '/' + 'data'; // build request object\n\n  const request = {\n    method,\n    path,\n    body: null,\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nRollupApi.prototype.putJob = function rollupPutJobApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback); // check required parameters\n\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id');\n    return handleError(err, callback);\n  }\n\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body');\n    return handleError(err, callback);\n  }\n\n  let {\n    method,\n    body,\n    id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'PUT';\n  path = '/' + '_rollup' + '/' + 'job' + '/' + encodeURIComponent(id); // build request object\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nRollupApi.prototype.rollup = function rollupRollupApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback); // check required parameters\n\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index');\n    return handleError(err, callback);\n  }\n\n  if (params.rollup_index == null && params.rollupIndex == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: rollup_index or rollupIndex');\n    return handleError(err, callback);\n  }\n\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body');\n    return handleError(err, callback);\n  } // check required url components\n\n\n  if ((params.rollup_index != null || params.rollupIndex != null) && params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index');\n    return handleError(err, callback);\n  }\n\n  let {\n    method,\n    body,\n    index,\n    rollupIndex,\n    rollup_index,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'POST';\n  path = '/' + encodeURIComponent(index) + '/' + '_rollup' + '/' + encodeURIComponent(rollup_index || rollupIndex); // build request object\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nRollupApi.prototype.rollupSearch = function rollupRollupSearchApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback); // check required parameters\n\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index');\n    return handleError(err, callback);\n  }\n\n  if (params.body == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: body');\n    return handleError(err, callback);\n  } // check required url components\n\n\n  if (params.type != null && params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index');\n    return handleError(err, callback);\n  }\n\n  let {\n    method,\n    body,\n    index,\n    type,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n\n  if (index != null && type != null) {\n    if (method == null) method = body == null ? 'GET' : 'POST';\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_rollup_search';\n  } else {\n    if (method == null) method = body == null ? 'GET' : 'POST';\n    path = '/' + encodeURIComponent(index) + '/' + '_rollup_search';\n  } // build request object\n\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nRollupApi.prototype.startJob = function rollupStartJobApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback); // check required parameters\n\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id');\n    return handleError(err, callback);\n  }\n\n  let {\n    method,\n    body,\n    id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'POST';\n  path = '/' + '_rollup' + '/' + 'job' + '/' + encodeURIComponent(id) + '/' + '_start'; // build request object\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nRollupApi.prototype.stopJob = function rollupStopJobApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback); // check required parameters\n\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id');\n    return handleError(err, callback);\n  }\n\n  let {\n    method,\n    body,\n    id,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n  if (method == null) method = 'POST';\n  path = '/' + '_rollup' + '/' + 'job' + '/' + encodeURIComponent(id) + '/' + '_stop'; // build request object\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n};\n\nObject.defineProperties(RollupApi.prototype, {\n  delete_job: {\n    get() {\n      return this.deleteJob;\n    }\n\n  },\n  get_jobs: {\n    get() {\n      return this.getJobs;\n    }\n\n  },\n  get_rollup_caps: {\n    get() {\n      return this.getRollupCaps;\n    }\n\n  },\n  get_rollup_index_caps: {\n    get() {\n      return this.getRollupIndexCaps;\n    }\n\n  },\n  put_job: {\n    get() {\n      return this.putJob;\n    }\n\n  },\n  rollup_search: {\n    get() {\n      return this.rollupSearch;\n    }\n\n  },\n  start_job: {\n    get() {\n      return this.startJob;\n    }\n\n  },\n  stop_job: {\n    get() {\n      return this.stopJob;\n    }\n\n  }\n});\nmodule.exports = RollupApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"RollupApi\");","map":{"version":3,"sources":["C:/Users/vince/peer/project/app_react/src/node_modules/@elastic/elasticsearch/api/api/rollup.js"],"names":["handleError","snakeCaseKeys","normalizeArguments","kConfigurationError","require","acceptedQuerystring","snakeCase","errorTrace","filterPath","typedKeys","restTotalHitsAsInt","waitForCompletion","RollupApi","transport","ConfigurationError","prototype","deleteJob","rollupDeleteJobApi","params","options","callback","id","err","method","body","querystring","path","encodeURIComponent","request","getJobs","rollupGetJobsApi","getRollupCaps","rollupGetRollupCapsApi","getRollupIndexCaps","rollupGetRollupIndexCapsApi","index","putJob","rollupPutJobApi","rollup","rollupRollupApi","rollup_index","rollupIndex","rollupSearch","rollupRollupSearchApi","type","startJob","rollupStartJobApi","stopJob","rollupStopJobApi","Object","defineProperties","delete_job","get","get_jobs","get_rollup_caps","get_rollup_index_caps","put_job","rollup_search","start_job","stop_job","module","exports"],"mappings":"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","sourcesContent":["/*\r\n * Licensed to Elasticsearch B.V. under one or more contributor\r\n * license agreements. See the NOTICE file distributed with\r\n * this work for additional information regarding copyright\r\n * ownership. Elasticsearch B.V. licenses this file to you under\r\n * the Apache License, Version 2.0 (the \"License\"); you may\r\n * not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\n'use strict'\r\n\r\n/* eslint camelcase: 0 */\r\n/* eslint no-unused-vars: 0 */\r\n\r\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\r\nconst acceptedQuerystring = ['pretty', 'human', 'error_trace', 'source', 'filter_path', 'typed_keys', 'rest_total_hits_as_int', 'wait_for_completion', 'timeout']\r\nconst snakeCase = { errorTrace: 'error_trace', filterPath: 'filter_path', typedKeys: 'typed_keys', restTotalHitsAsInt: 'rest_total_hits_as_int', waitForCompletion: 'wait_for_completion' }\r\n\r\nfunction RollupApi (transport, ConfigurationError) {\r\n  this.transport = transport\r\n  this[kConfigurationError] = ConfigurationError\r\n}\r\n\r\nRollupApi.prototype.deleteJob = function rollupDeleteJobApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  // check required parameters\r\n  if (params.id == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: id')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  let { method, body, id, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if (method == null) method = 'DELETE'\r\n  path = '/' + '_rollup' + '/' + 'job' + '/' + encodeURIComponent(id)\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nRollupApi.prototype.getJobs = function rollupGetJobsApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  let { method, body, id, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if ((id) != null) {\r\n    if (method == null) method = 'GET'\r\n    path = '/' + '_rollup' + '/' + 'job' + '/' + encodeURIComponent(id)\r\n  } else {\r\n    if (method == null) method = 'GET'\r\n    path = '/' + '_rollup' + '/' + 'job'\r\n  }\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: null,\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nRollupApi.prototype.getRollupCaps = function rollupGetRollupCapsApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  let { method, body, id, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if ((id) != null) {\r\n    if (method == null) method = 'GET'\r\n    path = '/' + '_rollup' + '/' + 'data' + '/' + encodeURIComponent(id)\r\n  } else {\r\n    if (method == null) method = 'GET'\r\n    path = '/' + '_rollup' + '/' + 'data'\r\n  }\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: null,\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nRollupApi.prototype.getRollupIndexCaps = function rollupGetRollupIndexCapsApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  // check required parameters\r\n  if (params.index == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: index')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  let { method, body, index, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if (method == null) method = 'GET'\r\n  path = '/' + encodeURIComponent(index) + '/' + '_rollup' + '/' + 'data'\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: null,\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nRollupApi.prototype.putJob = function rollupPutJobApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  // check required parameters\r\n  if (params.id == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: id')\r\n    return handleError(err, callback)\r\n  }\r\n  if (params.body == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: body')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  let { method, body, id, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if (method == null) method = 'PUT'\r\n  path = '/' + '_rollup' + '/' + 'job' + '/' + encodeURIComponent(id)\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nRollupApi.prototype.rollup = function rollupRollupApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  // check required parameters\r\n  if (params.index == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: index')\r\n    return handleError(err, callback)\r\n  }\r\n  if (params.rollup_index == null && params.rollupIndex == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: rollup_index or rollupIndex')\r\n    return handleError(err, callback)\r\n  }\r\n  if (params.body == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: body')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  // check required url components\r\n  if ((params.rollup_index != null || params.rollupIndex != null) && (params.index == null)) {\r\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  let { method, body, index, rollupIndex, rollup_index, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if (method == null) method = 'POST'\r\n  path = '/' + encodeURIComponent(index) + '/' + '_rollup' + '/' + encodeURIComponent(rollup_index || rollupIndex)\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nRollupApi.prototype.rollupSearch = function rollupRollupSearchApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  // check required parameters\r\n  if (params.index == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: index')\r\n    return handleError(err, callback)\r\n  }\r\n  if (params.body == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: body')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  // check required url components\r\n  if (params.type != null && (params.index == null)) {\r\n    const err = new this[kConfigurationError]('Missing required parameter of the url: index')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  let { method, body, index, type, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if ((index) != null && (type) != null) {\r\n    if (method == null) method = body == null ? 'GET' : 'POST'\r\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + '_rollup_search'\r\n  } else {\r\n    if (method == null) method = body == null ? 'GET' : 'POST'\r\n    path = '/' + encodeURIComponent(index) + '/' + '_rollup_search'\r\n  }\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nRollupApi.prototype.startJob = function rollupStartJobApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  // check required parameters\r\n  if (params.id == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: id')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  let { method, body, id, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if (method == null) method = 'POST'\r\n  path = '/' + '_rollup' + '/' + 'job' + '/' + encodeURIComponent(id) + '/' + '_start'\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nRollupApi.prototype.stopJob = function rollupStopJobApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  // check required parameters\r\n  if (params.id == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: id')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  let { method, body, id, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if (method == null) method = 'POST'\r\n  path = '/' + '_rollup' + '/' + 'job' + '/' + encodeURIComponent(id) + '/' + '_stop'\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nObject.defineProperties(RollupApi.prototype, {\r\n  delete_job: { get () { return this.deleteJob } },\r\n  get_jobs: { get () { return this.getJobs } },\r\n  get_rollup_caps: { get () { return this.getRollupCaps } },\r\n  get_rollup_index_caps: { get () { return this.getRollupIndexCaps } },\r\n  put_job: { get () { return this.putJob } },\r\n  rollup_search: { get () { return this.rollupSearch } },\r\n  start_job: { get () { return this.startJob } },\r\n  stop_job: { get () { return this.stopJob } }\r\n})\r\n\r\nmodule.exports = RollupApi\r\n"]},"metadata":{},"sourceType":"module"}