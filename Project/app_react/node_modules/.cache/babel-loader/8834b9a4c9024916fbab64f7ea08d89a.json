{"ast":null,"code":"/*\r\n * Licensed to Elasticsearch B.V. under one or more contributor\r\n * license agreements. See the NOTICE file distributed with\r\n * this work for additional information regarding copyright\r\n * ownership. Elasticsearch B.V. licenses this file to you under\r\n * the Apache License, Version 2.0 (the \"License\"); you may\r\n * not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n'use strict';\n/* eslint camelcase: 0 */\n\n/* eslint no-unused-vars: 0 */\n\nconst {\n  handleError,\n  snakeCaseKeys,\n  normalizeArguments,\n  kConfigurationError\n} = require('../utils');\n\nconst acceptedQuerystring = ['wait_for_active_shards', 'refresh', 'routing', 'timeout', 'if_seq_no', 'if_primary_term', 'version', 'version_type', 'pretty', 'human', 'error_trace', 'source', 'filter_path'];\nconst snakeCase = {\n  waitForActiveShards: 'wait_for_active_shards',\n  ifSeqNo: 'if_seq_no',\n  ifPrimaryTerm: 'if_primary_term',\n  versionType: 'version_type',\n  errorTrace: 'error_trace',\n  filterPath: 'filter_path'\n};\n\nfunction deleteApi(params, options, callback) {\n  ;\n  [params, options, callback] = normalizeArguments(params, options, callback); // check required parameters\n\n  if (params.id == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: id');\n    return handleError(err, callback);\n  }\n\n  if (params.index == null) {\n    const err = new this[kConfigurationError]('Missing required parameter: index');\n    return handleError(err, callback);\n  }\n\n  let {\n    method,\n    body,\n    id,\n    index,\n    type,\n    ...querystring\n  } = params;\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring);\n  let path = '';\n\n  if (index != null && type != null && id != null) {\n    if (method == null) method = 'DELETE';\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + encodeURIComponent(id);\n  } else {\n    if (method == null) method = 'DELETE';\n    path = '/' + encodeURIComponent(index) + '/' + '_doc' + '/' + encodeURIComponent(id);\n  } // build request object\n\n\n  const request = {\n    method,\n    path,\n    body: body || '',\n    querystring\n  };\n  return this.transport.request(request, options, callback);\n}\n\nmodule.exports = deleteApi;","map":{"version":3,"sources":["C:/Users/vince/peer/project/app_react/src/node_modules/@elastic/elasticsearch/api/api/delete.js"],"names":["handleError","snakeCaseKeys","normalizeArguments","kConfigurationError","require","acceptedQuerystring","snakeCase","waitForActiveShards","ifSeqNo","ifPrimaryTerm","versionType","errorTrace","filterPath","deleteApi","params","options","callback","id","err","index","method","body","type","querystring","path","encodeURIComponent","request","transport","module","exports"],"mappings":"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","sourcesContent":["/*\r\n * Licensed to Elasticsearch B.V. under one or more contributor\r\n * license agreements. See the NOTICE file distributed with\r\n * this work for additional information regarding copyright\r\n * ownership. Elasticsearch B.V. licenses this file to you under\r\n * the Apache License, Version 2.0 (the \"License\"); you may\r\n * not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\n'use strict'\r\n\r\n/* eslint camelcase: 0 */\r\n/* eslint no-unused-vars: 0 */\r\n\r\nconst { handleError, snakeCaseKeys, normalizeArguments, kConfigurationError } = require('../utils')\r\nconst acceptedQuerystring = ['wait_for_active_shards', 'refresh', 'routing', 'timeout', 'if_seq_no', 'if_primary_term', 'version', 'version_type', 'pretty', 'human', 'error_trace', 'source', 'filter_path']\r\nconst snakeCase = { waitForActiveShards: 'wait_for_active_shards', ifSeqNo: 'if_seq_no', ifPrimaryTerm: 'if_primary_term', versionType: 'version_type', errorTrace: 'error_trace', filterPath: 'filter_path' }\r\n\r\nfunction deleteApi (params, options, callback) {\r\n  ;[params, options, callback] = normalizeArguments(params, options, callback)\r\n\r\n  // check required parameters\r\n  if (params.id == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: id')\r\n    return handleError(err, callback)\r\n  }\r\n  if (params.index == null) {\r\n    const err = new this[kConfigurationError]('Missing required parameter: index')\r\n    return handleError(err, callback)\r\n  }\r\n\r\n  let { method, body, id, index, type, ...querystring } = params\r\n  querystring = snakeCaseKeys(acceptedQuerystring, snakeCase, querystring)\r\n\r\n  let path = ''\r\n  if ((index) != null && (type) != null && (id) != null) {\r\n    if (method == null) method = 'DELETE'\r\n    path = '/' + encodeURIComponent(index) + '/' + encodeURIComponent(type) + '/' + encodeURIComponent(id)\r\n  } else {\r\n    if (method == null) method = 'DELETE'\r\n    path = '/' + encodeURIComponent(index) + '/' + '_doc' + '/' + encodeURIComponent(id)\r\n  }\r\n\r\n  // build request object\r\n  const request = {\r\n    method,\r\n    path,\r\n    body: body || '',\r\n    querystring\r\n  }\r\n\r\n  return this.transport.request(request, options, callback)\r\n}\r\n\r\nmodule.exports = deleteApi\r\n"]},"metadata":{},"sourceType":"module"}