{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vince\\\\peer\\\\project\\\\app_react\\\\src\\\\components.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Thesis } from './thesis';\nimport { PropTypes } from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst elastic = require(\"./elastic\");\n\nconst ganache = require(\"./ganache\");\n\nvar accounts; //Adressen der Accounts, wird von Metamask zurückgegeben\n\nvar incrementer; //Variable für Conract\n\nexport class Headline extends React.Component {\n  constructor(props) {\n    super(props);\n    this.test = \"Test\";\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headline\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Peer \", this.test]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Open Source Student Theses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Navigation extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-md\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"navbar-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"nav-link\",\n            to: \"/\",\n            children: \"Index\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"nav-link\",\n            to: \"/search\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"nav-link\",\n            to: \"/submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.handleChange();\n    };\n\n    this.handleChange = async event => {\n      this.setState({\n        value: event.target.value\n      });\n      console.log(`Searching for: \"${this.state.value}\"...`);\n      const resultsJSON = await elastic.advancedSearchPDF(event.target.value, \"\", \" \");\n      const resultsObject = JSON.parse(resultsJSON);\n      var resultsArray = [];\n      var gotResults = resultsObject.hits.total.value !== 0;\n\n      if (gotResults) {\n        for (let hit of resultsObject.hits.hits) {\n          let hitID = hit._id;\n          let hitTitle = hit._source.title;\n          let hitAuthor = hit._source.author;\n          let hitYear = hit._source.year;\n          resultsArray.push(new Thesis(hitID, hitTitle, hitAuthor, hitYear, \"Example Filename\"));\n        }\n      }\n\n      this.setState({\n        results: resultsArray\n      });\n    };\n\n    this.handleBlur = () => {};\n\n    this.state = {\n      value: \"\",\n      results: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"searchbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Search Term\",\n        value: this.state.value,\n        onBlur: this.handleBlur,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          display: 'true'\n        },\n        onClick: () => this.handleClick(),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        thesisList: this.state.results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), console.log(\"Render List\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass List extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [this.props.thesisList.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Nothing Found. Try it with a different term.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 47\n      }, this) : null, this.props.thesisList.map(thesis => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [thesis.title, \", \", thesis.author, \", \", thesis.year]\n      }, thesis.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 48\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nList.propTypes = {\n  thesisList: PropTypes.string,\n  string: PropTypes.string\n};\n\nclass SubmitForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {};\n\n    this.handleClick = () => {\n      console.log(\"Submitting...\");\n      elastic.indexPDF(this.state.thesisToSubmit);\n    };\n\n    this.handleChange = event => {\n      console.log(\"Handle Change!\");\n      const file = event.target.files[0];\n\n      const cb = (err, result) => {\n        if (result) {\n          this.setState({\n            file: result,\n            fileName: event.target.files[0].name\n          });\n        }\n\n        ;\n      };\n\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function () {\n        cb(null, reader.result);\n      };\n\n      reader.onerror = function (error) {\n        cb(error, null);\n      };\n    };\n\n    this.fileToBase64 = (file, cb) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function () {\n        cb(null, reader.result);\n      };\n\n      reader.onerror = function (error) {\n        cb(error, null);\n      };\n    };\n\n    this.onUploadFileChange = target => {\n      if (target.files < 1 || !target.validity.valid) {\n        return;\n      }\n\n      this.fileToBase64(target.files[0], (err, result) => {\n        if (result) {//this.setState({\n          //  file: result,\n          //  fileName: target.files[0].name\n          //});\n        }\n      });\n    };\n\n    this.state = {\n      thesisToSubmit: new Thesis()\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          name: \"title\",\n          type: \"text\",\n          placeholder: \"Test Title\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"author\",\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"author\",\n          name: \"author\",\n          type: \"text\",\n          placeholder: \"Frederik Schmidt\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"file\",\n          children: \"File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          name: \"filetobase64\",\n          onChange: this.handleChange,\n          accept: \"application/pdf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"submit\",\n          type: \"submit\",\n          onClick: this.handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }, this), this.state.file ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"File \\\"\", this.state.fileName, \"\\\" as Base64:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.state.file, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n/* function FileInput(props) {\r\n\r\n  const [ file, setFile ] = useState(null)\r\n  const [ fileName, setFileName ] = useState(null)\r\n\r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"FileInput\">\r\n      <div className=\"upload-area\">\r\n        { fileName && <p className=\"filename\">{fileName.name}</p> }\r\n        \r\n      </div>\r\n      <br/>\r\n      {file ? <textarea id=\"base64File\" rows=\"30\" cols=\"150\" value={file} readOnly></textarea> : null }\r\n    </div>\r\n  )\r\n}*/\n\n\nexport { Navigation, Search, SubmitForm };","map":{"version":3,"sources":["C:/Users/vince/peer/project/app_react/src/components.js"],"names":["React","Component","Link","Thesis","PropTypes","elastic","require","ganache","accounts","incrementer","Headline","constructor","props","test","render","Navigation","Search","handleClick","handleChange","event","setState","value","target","console","log","state","resultsJSON","advancedSearchPDF","resultsObject","JSON","parse","resultsArray","gotResults","hits","total","hit","hitID","_id","hitTitle","_source","title","hitAuthor","author","hitYear","year","push","results","handleBlur","display","result","List","thesisList","length","map","thesis","propTypes","string","SubmitForm","handleSubmit","e","indexPDF","thesisToSubmit","file","files","cb","err","fileName","name","reader","FileReader","readAsDataURL","onload","onerror","error","fileToBase64","onUploadFileChange","validity","valid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Thesis } from './thesis';\r\nimport { PropTypes } from 'prop-types';\r\nconst elastic = require(\"./elastic\");\r\nconst ganache = require(\"./ganache\");\r\nvar accounts; //Adressen der Accounts, wird von Metamask zurückgegeben\r\nvar incrementer; //Variable für Conract\r\n\r\n\r\n\r\nexport class Headline extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props)\r\n      this.test = \"Test\";\r\n    }\r\n\r\n    render () {\r\n        return (\r\n        <div className=\"headline\">\r\n            <h1>Peer {this.test}</h1>\r\n            <h2>Open Source Student Theses</h2>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass Navigation extends React.Component {\r\n    render() {\r\n      return (\r\n        <nav className=\"navbar navbar-expand-md\">\r\n          <ul className=\"navbar-nav\">\r\n            <li><Link className=\"nav-link\" to=\"/\">Index</Link> </li>\r\n            <li><Link className=\"nav-link\" to=\"/search\">Search</Link></li>\r\n            <li><Link className=\"nav-link\" to=\"/submit\">Submit</Link></li>\r\n          </ul>\r\n        </nav>\r\n      )\r\n    };\r\n};\r\n\r\n\r\nclass Search extends React.Component {\r\n  \r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        value:\"\",\r\n        results: [],\r\n      };\r\n    }\r\n    \r\n    handleClick = () => {\r\n      this.handleChange();\r\n    };\r\n    \r\n    handleChange = async (event) => {\r\n      this.setState({value: event.target.value});\r\n      console.log(`Searching for: \"${this.state.value}\"...`);\r\n      const resultsJSON = await elastic.advancedSearchPDF(event.target.value, \"\", \" \");\r\n      const resultsObject = JSON.parse(resultsJSON);\r\n      var resultsArray = [];\r\n      var gotResults = (resultsObject.hits.total.value !== 0);\r\n      if (gotResults) {\r\n        for(let hit of resultsObject.hits.hits) {\r\n          let hitID = hit._id;\r\n          let hitTitle = hit._source.title;\r\n          let hitAuthor = hit._source.author;\r\n          let hitYear = hit._source.year;\r\n          resultsArray.push(new Thesis(hitID, hitTitle, hitAuthor, hitYear, \"Example Filename\"));\r\n        }\r\n      }\r\n      this.setState({results: resultsArray});\r\n    };\r\n    \r\n    handleBlur = () => {\r\n    };\r\n    \r\n    render() {       \r\n      return (\r\n        <div id=\"searchbar\">\r\n          <input type=\"text\" placeholder=\"Enter Search Term\" value={this.state.value} onBlur={this.handleBlur} onChange={this.handleChange}></input>\r\n          <button style={{display:'true'}} onClick={() => this.handleClick()}>Search</button>\r\n          <p>{this.state.result}</p>\r\n          <List thesisList={this.state.results} />\r\n          {console.log(\"Render List\")}\r\n        </div>\r\n      );\r\n    };\r\n}\r\n\r\nclass List extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.props.thesisList.length === 0 ? <li>Nothing Found. Try it with a different term.</li> : null}\r\n        {this.props.thesisList.map((thesis) => <li key={thesis.title}>{thesis.title}, {thesis.author}, {thesis.year}</li>)}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nList.propTypes = {\r\n  thesisList: PropTypes.string,\r\n  string: PropTypes.string,\r\n}\r\n\r\n\r\nclass SubmitForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      thesisToSubmit: new Thesis(),\r\n    };\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n\r\n  };\r\n\r\n  handleClick = () => {\r\n      console.log(\"Submitting...\");\r\n      elastic.indexPDF(this.state.thesisToSubmit);\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    console.log(\"Handle Change!\")\r\n    const file = event.target.files[0];\r\n    const cb = (err, result) => {\r\n      if (result) {\r\n        this.setState({\r\n          file: result,\r\n          fileName: event.target.files[0].name\r\n        });\r\n      };\r\n    };\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file)\r\n    reader.onload = function () {\r\n      cb(null, reader.result)\r\n    }\r\n    reader.onerror = function (error) {\r\n      cb(error, null)\r\n    }\r\n  };\r\n\r\n\r\n\r\n  fileToBase64 = (file, cb) => {\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(file)\r\n    reader.onload = function () {\r\n      cb(null, reader.result)\r\n    }\r\n    reader.onerror = function (error) {\r\n      cb(error, null)\r\n    }\r\n  };\r\n\r\n  onUploadFileChange = (target) => {\r\n    if (target.files < 1 || !target.validity.valid) {\r\n      return\r\n    }\r\n    this.fileToBase64(target.files[0], (err, result) => {\r\n      if (result) {\r\n        //this.setState({\r\n        //  file: result,\r\n        //  fileName: target.files[0].name\r\n        //});\r\n      }\r\n    })\r\n  };\r\n\r\n  render() {\r\n      return (\r\n          <div>\r\n              <form onSubmit={handleSubmit}>\r\n                  <label for=\"title\">Title</label>\r\n                  <br></br>\r\n                  <input id=\"title\" name=\"title\" type=\"text\" placeholder=\"Test Title\" required></input>\r\n                  <br></br>\r\n                  <label for=\"author\">Author</label>\r\n                  <br></br>\r\n                  <input id=\"author\" name=\"author\" type=\"text\" placeholder=\"Frederik Schmidt\" required></input>\r\n                  <br></br>\r\n                  <label for=\"file\">File</label>\r\n                  <br></br>\r\n                  <input type=\"file\" id=\"file\" name=\"filetobase64\" onChange={this.handleChange} accept=\"application/pdf\" />\r\n                  <br></br>\r\n                  <input id=\"submit\" type=\"submit\" onClick={this.handleClick}></input>\r\n              </form>\r\n              {this.state.file ?\r\n                <div>\r\n                  <h6>File \"{this.state.fileName}\" as Base64:</h6>\r\n                  <p>{this.state.file}.</p>\r\n                </div> : null}\r\n          </div>\r\n      );\r\n  }\r\n\r\n}\r\n\r\n\r\n/* function FileInput(props) {\r\n\r\n  const [ file, setFile ] = useState(null)\r\n  const [ fileName, setFileName ] = useState(null)\r\n\r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"FileInput\">\r\n      <div className=\"upload-area\">\r\n        { fileName && <p className=\"filename\">{fileName.name}</p> }\r\n        \r\n      </div>\r\n      <br/>\r\n      {file ? <textarea id=\"base64File\" rows=\"30\" cols=\"150\" value={file} readOnly></textarea> : null }\r\n    </div>\r\n  )\r\n}*/\r\n\r\nexport { Navigation, Search, SubmitForm};"]},"metadata":{},"sourceType":"module"}